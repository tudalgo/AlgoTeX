\NeedsTeXFormat{LaTeX2e}
\RequirePackage{expl3}
\RequirePackage{tudacolors}
\ProvidesExplPackage{fopbot}{2025-04-18}{2.4.2}{FOP-Bot LaTeX Package}

% Made by Ruben Deisenroth, created in 2020
% Available at https://github.com/Rdeisenroth/FOPBot-Latex-Package

\RequirePackage{pgfkeys, tikz, xcolor}
\ExplSyntaxOff
\usetikzlibrary{shapes, arrows.meta, shadows.blur, backgrounds}
\ExplSyntaxOn

\DeclareDocumentCommand{\@fopbot@color@define}{mmm}{
    \cs_if_exist:cTF {color@#1}{%
        \PackageWarning{FOPBot}{Color~#1~is~a~reserved~color~for~the~FOPBot~package~and~should~not~be~overwritten.}
    }{%
        \definecolor{#1}{#2}{#3}%
    }%
}

\@fopbot@color@define{fopbot@lightgray}{RGB}{192, 192, 192}
\@fopbot@color@define{fopbot@dark_gray}{RGB}{128, 128, 128}
\colorlet{fopbot@bot_blue}{TUDa-2a}
\@fopbot@color@define{fopbot@bot_dark_blue}{RGB}{1, 0, 66}
\@fopbot@color@define{fopbot@triangleborder}{RGB}{1, 0, 66}
\@fopbot@color@define{fopbot@tetris_orange_border}{RGB}{255, 179, 128}
\@fopbot@color@define{fopbot@tetris_light_orange}{RGB}{255, 143, 64}
\@fopbot@color@define{fopbot@tetris_dark_orange}{RGB}{255, 103, 1}
\@fopbot@color@define{fopbot@tetris_gray}{RGB}{102, 102, 102}
\@fopbot@color@define{fopbot@chess_dark_gray}{RGB}{64,64,64}
\@fopbot@color@define{fopbot@coin}{RGB}{255,0,0}

\cs_if_exist:cT{IfDarkModeT}{
    \IfDarkModeT{
        \colorlet{fopbot@lightgray}{black!80!gray!98!blue}
        \colorlet{fopbot@dark_gray}{white!20!gray!98!blue}
        % \colorlet{fopbot@triangleborder}{black}
        \colorlet{fopbot@coin}{orange!90}
    }
}

\newif\iffopbot@turned@on

% Icons
\tikzset{
pics/Coin/.style={
    code={%
        \path[draw=none, semithick, fill=fopbot@coin] (0,0) circle (.4cm) node[font=\scriptsize\sffamily\bfseries,color=black]{#1};%
    }
},
pics/Coin/.default=1,
/tbotkeys/.search~also={/tikz},
/tbotkeys/primary~color/.estore~in=\fopbot@primarycolor,
/tbotkeys/primary~color/.initial=TUDa-2a,
/tbotkeys/secondary~color/.estore~in=\fopbot@secondarycolor,
/tbotkeys/secondary~color/.initial=TUDa-2b,
/tbotkeys/border~color/.estore~in=\fopbot@bordercolor,
/tbotkeys/border~color/.initial=fopbot@bot_dark_blue,
/tbotkeys/eye~color/.estore~in=\fopbot@eyecolor,
/tbotkeys/eye~color/.initial=fopbot@bot_dark_blue,
/tbotkeys/turned~on/.is~if=fopbot@turned@on,
/tbotkeys/tblue/.style={
    primary~color=TUDa-2c!50,
    secondary~color=TUDa-2c,
    border~color=TUDa-2a!50,
    eye~color=TUDa-0d,
},
/tbotkeys/tyellow/.style={
    primary~color=TUDa-6b!50,
    secondary~color=TUDa-6b,
    border~color=TUDa-6a!50,
    eye~color=TUDa-0d,
},
/tbotkeys/torange/.style={
    primary~color=TUDa-7b!50,
    secondary~color=TUDa-7b,
    border~color=TUDa-7a!50,
    eye~color=TUDa-0d,
},
/tbotkeys/tgreen/.style={
    primary~color=TUDa-5c!50,
    secondary~color=TUDa-5c,
    border~color=TUDa-5a!50,
    % primary~color={rgb,255:red,181;green,203;blue,95},
    % secondary~color={rgb,255:red,149;green,189;blue,0},
    % border~color={rgb,255:red,204;green,224;blue,128},
    eye~color=TUDa-0d,
},
/tbotkeys/tred/.style={
    primary~color=TUDa-9b!50,
    secondary~color=TUDa-9b,
    border~color=TUDa-9b!30,
    eye~color=TUDa-0d,
},
/tbotkeys/tteal/.style={
    primary~color=TUDa-3c!50,
    secondary~color=TUDa-3c,
    border~color=TUDa-3a!50,
    eye~color=TUDa-0d,
},
/tbotkeys/taqua/.style={
    tteal,
},
/tbotkeys/tpurple/.style={
    primary~color=TUDa-10b!50,
    secondary~color=TUDa-10b,
    border~color=TUDa-10a!50,
    eye~color=TUDa-0d,
},
/tbotkeys/tblack/.style={
    primary~color=TUDa-0d!50,
    secondary~color=black,
    border~color=TUDa-0b,
    eye~color=TUDa-0d,
},
/tbotkeys/twhite/.style={
    primary~color=TUDa-0b!50,
    secondary~color=TUDa-0b,
    border~color=TUDa-0a!50,
    eye~color=TUDa-0d,
},
pics/Trianglebot/.style={
    code={%
        % set default values
        \pgfkeys{/tbotkeys/.cd,
            primary~color=TUDa-2a,
            secondary~color=TUDa-2b,
            border~color=fopbot@bot_dark_blue,
            eye~color=fopbot@bot_dark_blue,
            turned~on=true,
        }
        % Apply user-specified options
        \pgfkeys{/tbotkeys/.cd,#1}
        %\draw (-.5,-.5) rectangle (.5,.5);
        %Triangle
        \draw[thick, draw=\fopbot@bordercolor, fill=\fopbot@primarycolor]
        (-.38,-.2) coordinate (c1) --
        (.38,-.2) coordinate (c2) --
        (0, .45) coordinate (c3) -- cycle;
        % Eye: \fopbot@turned@on is a boolean that determines if the robot is turned on. If turned off it has an X instead of an eye
        \iffopbot@turned@on
            \draw[thick, fill=white,draw=\fopbot@bordercolor] (0,.03) circle (1.38mm) coordinate (cc);
            \draw[thick, fill=\fopbot@eyecolor,draw=\fopbot@eyecolor] (cc) circle (1.28pt);
        \else
            \draw[thick, top~color=\fopbot@primarycolor!25,bottom~color=\fopbot@primarycolor!50,draw=\fopbot@bordercolor] (0,.03) circle (1.38mm) coordinate (cc);
            \draw[thick, draw=\fopbot@eyecolor] (cc) ++(-.5mm,-.5mm) -- ++(1mm,1mm);
            \draw[thick, draw=\fopbot@eyecolor] (cc) ++(-.5mm,.5mm) -- ++(1mm,-1mm);
        \fi
        %Legs
        \draw[thick, fill=white,draw=\fopbot@bordercolor] (-.195,-.2) rectangle (-.06,-.29);
        \draw[thick, fill=white,draw=\fopbot@bordercolor] (-.195,-.29) rectangle (-.06,-.4);
        \draw[thick, fill=white,draw=\fopbot@bordercolor] (.185,-.2) rectangle (.05,-.29);
        \draw[thick, fill=white,draw=\fopbot@bordercolor] (.185,-.29) rectangle (.05,-.4);
        %Feet
        \draw[thick, fill=\fopbot@primarycolor,draw=\fopbot@bordercolor] (-.04, -.445) arc (0\c_colon_str 180\c_colon_str .09) -- cycle;
        \draw[thick, fill=\fopbot@primarycolor,draw=\fopbot@bordercolor] (.21, -.445) arc (0\c_colon_str 180\c_colon_str .09) -- cycle;
    }
},
pics/Trianglebot/.default={primary~color=TUDa-2a},
pics/Tetrisbot/.style={
    code={%
        \pgfkeys{/tbotkeys/.cd,
            primary~color=TUDa-2c!50,
            secondary~color=TUDa-2c,
            border~color=TUDa-2a!50,
            eye~color=TUDa-0d,
            turned~on=true,
        }
        % Apply user-specified options
        \pgfkeys{/tbotkeys/.cd,#1}
        \draw[draw=\fopbot@bordercolor, ultra~thick, bottom~color=\fopbot@secondarycolor, top~color = \fopbot@primarycolor] ([xshift=.8pt,yshift=.8pt]-.425,-.425) rectangle ([xshift=-.8pt,yshift=-.8pt].425,.425);
        \iffopbot@turned@on
            \draw[draw=\fopbot@bordercolor, thick,fill=white] (0,.1) circle (2mm);
            \draw[draw=none,fill=\fopbot@eyecolor] (0,.185) circle (.7mm);
        \else
            \draw[draw=\fopbot@bordercolor, thick,fill=\fopbot@bordercolor] (0,.1) circle (2mm);
        \fi
    }},
}

% Definition der FOPBotWorld-Umgebung
\DeclareDocumentEnvironment{FOPBotWorld}{mm}{
    % Constants
    \def\tilesize{1cm}
    \def\worldwidth{#1}
    \def\worldheight{#2}

    %Makros
    \DeclareDocumentCommand{\setcoin}{mmm}{
        \int_gzero_new:c {fopbot@C-##1-##2-}
        \int_gset:cn {fopbot@C-##1-##2-}{##3}
    }
    \DeclareDocumentCommand{\getcoin}{mm}{
        \int_if_exist:cTF {fopbot@C-##1-##2-}{
            \int_use:c {fopbot@C-##1-##2-}
        }{
            0
        }
    }

    \DeclareDocumentCommand{\putcoin}{mmm}{%
        \bool_if:nF {\tl_if_blank_p:e {##1} || \tl_if_blank_p:e {##2}}{
            \int_gset:cn {fopbot@C-##1-##2-} {##3}
        }
    }

    %Layers
    \pgfdeclarelayer{board}
    \pgfdeclarelayer{coins}
    \pgfdeclarelayer{walls}
    \pgfsetlayers{background, board, coins, walls, main}  % set the order of the layers (main is the standard layer)
    % Begin Tikz Picture
    \begin{tikzpicture}%[scale=#3, every node/.style={scale=#3}] %Scaling Planned for future release
        % Initialize world
        \begin{pgfonlayer}{board}
            \foreach \x in {0,...,\int_eval:n{\worldwidth - 1}}{
                \foreach \y in {0,...,\int_eval:n{\worldheight - 1}}{
                    \setcoin{\x}{\y}{0} % Reset Coins from previous worlds
                    \node[
                        draw=fopbot@dark_gray,
                        fill=fopbot@lightgray,
                        minimum~width=\tilesize,
                        minimum~height=\tilesize,
                        inner~sep=0pt,
                        anchor=center,
                        very~thick
                    ] (n-\x-\y) at (0cm + \tilesize * \x ,0cm + \tilesize * \y ){};
                }
            }
        \end{pgfonlayer}
        }
        {%After
        % Finish World
        \begin{pgfonlayer}{coins}
            \foreach \x in {0,...,\int_eval:n{\worldwidth - 1}} {
                \foreach \y in {0,...,\int_eval:n{\worldheight - 1}} {
                    \int_compare:nT {\getcoin{\x}{\y} > 0} {
                        \path (\x,\y) pic {
                            Coin={
                                \getcoin{\x}{\y}
                            }
                        };
                    }
                }
            }
        \end{pgfonlayer}
        %World Border
        \begin{pgfonlayer}{walls}
            \draw[very~thick]
            ([xshift=.6pt,yshift=.6pt]n-0-0.south~west)
            rectangle
            ([xshift=-.6pt,yshift=-.6pt]n-\int_eval:n{\worldwidth - 1}-\int_eval:n{\worldheight - 1}.north~east);
        \end{pgfonlayer}
    \end{tikzpicture}
}
